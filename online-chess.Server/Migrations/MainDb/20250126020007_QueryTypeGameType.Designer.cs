// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using online_chess.Server.Persistence;

#nullable disable

namespace online_chess.Server.Migrations.MainDb
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20250126020007_QueryTypeGameType")]
    partial class QueryTypeGameType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("online_chess.Server.Models.DTOs.GameTypeList", b =>
                {
                    b.Property<int>("Draws")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastGameDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Loses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Wins")
                        .HasColumnType("INTEGER");

                    b.ToTable("GameTypeList");
                });

            modelBuilder.Entity("online_chess.Server.Models.Entities.GameHistory", b =>
                {
                    b.Property<long>("GameHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GameEndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GameStartDate")
                        .HasColumnType("TEXT");

                    b.Property<short>("GameType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDraw")
                        .HasColumnType("INTEGER");

                    b.Property<short>("PlayerOneColor")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PlayerOneId")
                        .HasColumnType("INTEGER");

                    b.Property<short>("PlayerTwoColor")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PlayerTwoId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("WinnerPlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameHistoryId");

                    b.ToTable("GameHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
